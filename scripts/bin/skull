#!/bin/bash

#set -x

########################## Global Environment Variables ########################
# detected skull project root folder
SKULL_PROJ_ROOT=

# detected skull scripts root folder
SKULL_ROOT=

##################################### Utility ##################################
function print_usage()
{
    echo "Usage:"
    echo " \_ skull create"
    echo " \_ skull config"
    echo " \_ skull common"
    echo " \_ skull workflow"
    echo " \_ skull module"
    echo " \_ skull service"
    echo " \_ skull build"
    echo " \_ skull deploy"
    echo " \_ skull start"
    echo " \_ skull trace"
    echo " \_ skull version"
    echo " \_ skull help"
    echo ""
    echo "Run 'skull help command_name' for the usage of the command"
}

function action_help_usage()
{
    echo "Usage:"
    echo "  skull help command_name"
}

# Get the skull scripts root directory folder, it should be run only once
function get_root()
{
    SKULL_ROOT=`dirname $0`
    SKULL_ROOT=`dirname $SKULL_ROOT`

    # If we run skull from its bin folder like "./skull", so the $SKULL_ROOT
    # should be its parent folder
    if [ $SKULL_ROOT = "." ] && [ -x skull ]; then
        SKULL_ROOT="../$SKULL_ROOT"
    fi
}

# The prepare() function mainly focus on:
# 1. Initialize global variables
# 2. Load lib scripts
function prepare()
{
    local should_get_proj_root=$1

    # 1. Get the root script folder of skull
    get_root

    # 2. Load the lib scripts
    . $SKULL_ROOT/lib/skull/skull_utils.bash
    . $SKULL_ROOT/lib/skull/skull_action_create.bash
    . $SKULL_ROOT/lib/skull/skull_action_workflow.bash
    . $SKULL_ROOT/lib/skull/skull_action_module.bash
    . $SKULL_ROOT/lib/skull/skull_action_common.bash
    . $SKULL_ROOT/lib/skull/skull_action_service.bash
    . $SKULL_ROOT/lib/skull/skull_action_build.bash
    . $SKULL_ROOT/lib/skull/skull_action_deploy.bash
    . $SKULL_ROOT/lib/skull/skull_action_start.bash
    . $SKULL_ROOT/lib/skull/skull_action_trace.bash
    . $SKULL_ROOT/lib/skull/skull_action_version.bash
    . $SKULL_ROOT/lib/skull/skull_action_config.bash

    # If no need to get project root path, return 0 directly
    if ! $should_get_proj_root; then
        return 0
    fi

    # 3. Now if the other commands need the root path of a skull project,
    #  so get it before run any other commands
    sk_util_get_proj_root
    if [ $? = 1 ]; then
        echo "Fatal: Not a skull project" >&2
        exit 1
    fi

    # 4. load the env variables
    . $SKULL_ROOT/lib/skull/skull_env.bash

    # 5. load language scripts
    sk_util_preload_language_actions
}

###################################### MAIN ####################################
# 1. Basic checking for parameter count
if [ $# = 0 ]; then
    prepare false
    action_version
    echo ""
    print_usage
    exit 1
fi

# 2. Process Commands
case "$1" in
    (create|version|start|trace)
        prepare false
        entry=$1
        shift

        action_$entry $@
        ;;
    (workflow|module|common|config|service|build|deploy)
        prepare true
        entry=$1
        shift

        # Every action bash utility entry must be action_xxx,
        # the "xxx" is the command arg, for example: user run `skull workflow`,
        # so the action_workflow will be called
        action_$entry $@
        ;;
    (help)
        shift
        if [ $# -eq 0 ]; then
            echo "Error: Invalid command name. - eg: skull help 'command'" >&2
            exit 1
        fi

        prepare false
        entry=$1
        shift

        action_${entry}_usage
        ;;
    (*)
        echo "Error: Unknown command parameter $1" >&2
        print_usage >&2
        exit 1
        ;;
esac

exit 0
