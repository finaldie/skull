description: Create two modules which attach to the same workflow, then verify they can work one by one

pre-run:
    - echo "pre-run"
    - ${COMMON}/create_project
    - ${COMMON}/create_workflow -c y -I example -i n -n y -p 7758
    - ${COMMON}/create_module -n test -i 0 -l cpp
    - ${COMMON}/create_module -n test1 -i 0 -l cpp
    - ${COMMON}/create_module -n test2 -i 0 -l py
    - ${COMMON}/create_service -n s1 -l cpp -m rw-pr
    - ${COMMON}/create_service_api -s s1 -n get
    - cp ${CASE}/module.cpp ${RUN}/project/src/modules/test/src/
    - cp ${CASE}/module.cpp ${RUN}/project/src/modules/test1/src/
    - cp ${CASE}/module.py ${RUN}/project/src/modules/test2/
    - cd project && skull build && skull build check && skull build valgrind-check && skull deploy

run:
    - echo "run"
    - cd project && skull start -D
    - sleep 1

verify:
    - echo "verify"
    - echo "status" | nc 127.0.0.1 7759 | grep "2"
    - echo "hello skull" | nc 127.0.0.1 7758 -i 1 | grep "Hi new bie, Hi new bie, Hi new bie"
    - cat ${RUN}/project/run/log/skull.log | grep "skull engine is ready"
    - 'cat ${RUN}/project/run/log/skull.log | grep "receive data: hello skull"'
    - 'cat ${RUN}/project/run/log/skull.log | grep "module_pack: data sz: 48"'
    - 'echo "metrics" | nc 127.0.0.1 7759 | grep "global.response: 2"'

post-verify:
    - echo "post-verify"
    - killall skull-engine || exit 0
